<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>ifcuriousthenlearn (Posts about linux)</title><link>https://nagordon.github.io/ifcuriousthenlearn/</link><description></description><atom:link href="https://nagordon.github.io/ifcuriousthenlearn/categories/linux.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2021 &lt;a href="mailto:"&gt;neal&lt;/a&gt; </copyright><lastBuildDate>Tue, 27 Jul 2021 04:55:56 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Automating Website Downloads with wget</title><link>https://nagordon.github.io/ifcuriousthenlearn/posts/wget-downloads/</link><dc:creator>neal</dc:creator><description>&lt;div&gt;&lt;p&gt;Have you ever been browsing the internet and found a really cool website that has a bunch of files that you want, say pdfs or mp3s? In Windows it can be a pain to scrape through the site and download all the files. You may be able to write a slick python script to acomplish this, but why reinvent the wheel? Native in Linux is the program wget, which can also be used in windows, &lt;a href="http://www.gnu.org/software/wget/"&gt;GNU wget&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;To get started, on a Linux computer, open your terminal and type&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;man wget
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;This shows the manual for wget for when you get stuck. But for now, we don't need it, so type &lt;code&gt;q&lt;/code&gt; to quit. OK, time for the rubber to hit the road. Enter&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget www.ifcuriousthenlearn.com
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;This downloads the html file that is at that url. Easy huh? Lets try something a little more complicated, lets say download a pdf&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget http://www.aopa.org/airports/CLE/kneeboard.pdf
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;And this downloads the pdf from the url. Wow, can it really be this easy? YES, yes it can. It just takes a while to find cool tools like this.&lt;/p&gt;
&lt;p&gt;Here is a more advanced example. This wget command searches recursivley and downloads the entire website given.  &lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget --recursive http://www.brown.edu/Departments/Engineering/Courses/En221/
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;The problem with this is that it will follow any links as it recurses through the site, and we don't want that. So, by adding another flag, called &lt;code&gt;--domains&lt;/code&gt;, we limit the command to the domain of the main site.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget --domains www.brown.edu --recursive http://www.brown.edu/Departments/Engineering/Courses/En221/
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;What if we just want to download certain file types? Here, use the &lt;code&gt;--accept&lt;/code&gt; flag with the file extension&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget --accept .pdf --domains www.brown.edu --recursive http://www.brown.edu/Departments/Engineering/Courses/En221/
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;There we have it. Have fun download the internet, saving time and exploring other awesome packages in Linux. I hope you found this useful. Please leave any comments below.&lt;/p&gt;
&lt;p&gt;Stay Curious!&lt;/p&gt;&lt;/div&gt;</description><category>automation</category><category>linux</category><category>webscraping</category><guid>https://nagordon.github.io/ifcuriousthenlearn/posts/wget-downloads/</guid><pubDate>Wed, 19 Aug 2015 08:00:00 GMT</pubDate></item><item><title>The Fastest Way To Linux on Windows using Vagrant</title><link>https://nagordon.github.io/ifcuriousthenlearn/posts/vagrant-linux/</link><dc:creator>neal</dc:creator><description>&lt;div&gt;&lt;h3&gt;Introduction and Motivation&lt;/h3&gt;
&lt;p&gt;This article is written for Windows users that would like to extend their skill-set to Linux and assumes you are comfortable with the command line. Go brush up before reading this if you are unsure what a command line is:)&lt;/p&gt;
&lt;p&gt;I wish I would have spent more time as a kid learning Linux than all the time I wasted on Windows. That is my biggest regret when it comes to technology. Once I started to see all the amazing software available on Linux (for free), I realized the potential . The road to practical application wasn't easy, but it was fun. Now, with a few years under my belt, I am able to save time utilizing the tools that already exist, or having the capability to create my own without having to buy licenses for them!&lt;/p&gt;
&lt;p&gt;This post is designed for the intermediate Windows users that are ready to start using Linux for whatever reason you have. I think the easiest way (but not the most useful) to use Linux is to install &lt;a href="http://www.linuxmint.com/edition.php?id=190"&gt;Mint&lt;/a&gt;, install on a usb drive larger than 4 GB with &lt;a href="http://sourceforge.net/projects/win32diskimager/"&gt;win32diskimager&lt;/a&gt;, &lt;a href="http://unetbootin.github.io/"&gt;unebootin&lt;/a&gt;, or &lt;a href="http://www.pendrivelinux.com/universal-usb-installer-easy-as-1-2-3/"&gt;pendrivelinux&lt;/a&gt;. Now, just boot from the USB and you are ready for action. But, this is not a practical working solution, especially at work or at home if you need other windows applications. The ideal situation is if we can use Linux and Windows along side one another. &lt;strong&gt;Enter &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;VirtualBox&lt;/a&gt;&lt;/strong&gt;. Virtualbox is a program that allows you to &lt;em&gt;virtualize&lt;/em&gt; other operating systems on your current one, is open-source, and works great. You can collect a few ISO files of your favorite Linux operating systems (check out &lt;a href="http://distrowatch.com/"&gt;distrowatch&lt;/a&gt;), and install them on VirtualBox and use the operating system (OS) graphical user interface (GUI). This method has its time and place, like if you prefer using a GUI for everything, then there is no need to read further. But, I encourage you to learn command line operation, as it is faster and easier to operate many programs from a command line as it is to mouse-click through them. Or when you start developing your own software tools, it will become clear why command line operation is nice. Anyways, there is yet an easier way to use Linux. &lt;strong&gt;Enter &lt;a href="https://www.vagrantup.com/"&gt;Vagrant&lt;/a&gt;&lt;/strong&gt;. Vagrant is a command line tool that allows you to manage your Virtualbox operating systems from a command line and easily share files from Windows and Linux. The general workflow is:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Install Vagrant and dependencies&lt;/li&gt;
&lt;li&gt;Download a base image called a box to be used and reused as you create new virtual Linux environments&lt;/li&gt;
&lt;li&gt;Make a folder to store your virtual Linux settings in Windows&lt;/li&gt;
&lt;li&gt;Initialize Vagrant in that folder&lt;/li&gt;
&lt;li&gt;Install software and use Linux in Windows from the command line&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;Why Vagrant?
There are other programs that can perform a similar task as what we are trying to accomplish  here, such as &lt;a href="https://www.docker.com/"&gt;Docker&lt;/a&gt;. Docker is an amazing tool that runs containers, rather than virtual environments. But, my goal here is to get from Windows to Linux in the fastest time possible, and I have found that Docker in Windows is a bit finicky and Vagrant is so far rock-solid.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3&gt;Getting Started&lt;/h3&gt;
&lt;h4&gt;1. Installation&lt;/h4&gt;
&lt;p&gt;OK, time to get our hands dirty. There are a few programs we need to install before we get to vagrant, so lets do that first.&lt;/p&gt;
&lt;h5&gt;Git Install (~10 MB)&lt;/h5&gt;
&lt;p&gt;git is a source control program that is awesome to use, but has a steep learning curve. All we need from this install is mysysgit, which is a windows bash terminal, which is like the windows command line for Linux. Download and install &lt;a href="https://git-scm.com/downloads"&gt;git&lt;/a&gt; and select the defaults. At the end of the install, select &lt;code&gt;[x] git bash here&lt;/code&gt; to give us an option to start a bash command prompt with a right-click of the mouse in our folder&lt;/p&gt;
&lt;h5&gt;VirtualBox Install (~110 MB)&lt;/h5&gt;
&lt;p&gt;Download &lt;a href="https://www.virtualbox.org/wiki/Downloads"&gt;VirtualBox&lt;/a&gt; and install with the default settings.&lt;/p&gt;
&lt;h5&gt;Vagrant Install (~160 MB)&lt;/h5&gt;
&lt;p&gt;Install &lt;a href="https://dl.bintray.com/mitchellh/vagrant/vagrant_1.7.4.msi"&gt;Vagrant from the Windows exe&lt;/a&gt;. Once that is complete, it will ask you to reboot your machine.&lt;/p&gt;
&lt;h5&gt;Using gitbash and windows command line&lt;/h5&gt;
&lt;p&gt;Now we are almost ready to try everything out!
if you right-click on your desktop, you should have an option to &lt;code&gt;Git Bash Here.&lt;/code&gt;. Select that an you should be greeted with MINGW32 (aka gitbash) command prompt. Welcome to your first &lt;em&gt;bash-like&lt;/em&gt; command prompt. You can perform all the vagrant opertions in windows using gitbash, but we can also use windows command line for everything, but not ssh connections. We must use &lt;a href="http://www.chiark.greenend.org.uk/~sgtatham/putty/"&gt;putty&lt;/a&gt; or some other windows ssh tool.&lt;/p&gt;
&lt;p&gt;If you really want to use the windows command line, here are some tips.
Lets close that and try out the windows command line. My favorite way to launch the windows command line is to hold shift and right-click on the desktop and select &lt;code&gt;open command window here&lt;/code&gt;. Now we have windows command line. We can also access this by searching in Start, but then you have to use the &lt;code&gt;cd&lt;/code&gt; command to change yuor directory to your vagrant_test.  Another option is to type &lt;code&gt;cd&lt;/code&gt;, copy the folder path to the clipboard, ie &lt;em&gt;C:\Users\ngordon\Desktop\vagrant_test&lt;/em&gt; and right-click in a command prompt and paste and enter. This will take you to your folder.
And lastly, after that nice explanation, don't use windows command line, use powershell, which is an enhanced command line for windows that has many of the same features as bash. launch from the command line with &lt;code&gt;powershell&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I would recommend doing everything in gitbash because it is good practice for a real Linux bash terminal and we can use ssh all in the same window.&lt;/p&gt;
&lt;h4&gt;2. Download Base Image (~1 GB)&lt;/h4&gt;
&lt;p&gt;To make future deployments fast lets grab a base image of Linux Ubuntu 14.04. Go to your windows desktop and launch a windows command line as described previously, or, I prefer using gitbash. Note, comments in gitbash are #, so do not type those&lt;/p&gt;
&lt;p&gt;Lets add Ubuntu Server 14.04 LTS 62-bit image to our local vagrant images. Or browse the &lt;a href="https://atlas.hashicorp.com/boxes/search"&gt;catalog&lt;/a&gt; for your preferred image&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;vagrant box add ubuntu/trusty64
&lt;span class="c1"&gt;# or hashicorp/precise64 for a 12.04 LTS 64 machine&lt;/span&gt;
&lt;span class="c1"&gt;# or chef/ubuntu-14.04  for a base 14.04 LTS 64 ubuntu machine&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;3. Set up a work folder&lt;/h4&gt;
&lt;p&gt;This will take some time to download, but once complete. The rest of the operations are a matter of seconds.&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# make a new folder called vagrant_test&lt;/span&gt;
mkdir vagrant_test

&lt;span class="c1"&gt;# change directory to vagrant test&lt;/span&gt;
&lt;span class="nb"&gt;cd&lt;/span&gt; vagrant_test

&lt;span class="c1"&gt;# print working directory to check the file path&lt;/span&gt;
&lt;span class="nb"&gt;pwd&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;4. Initialize a new Vagrant project&lt;/h4&gt;
&lt;p&gt;Now we have everything we need to start. After running the following commands, a config text file &lt;em&gt;Vagrantfile&lt;/em&gt; will be created with a hidden file &lt;em&gt;.vagrant&lt;/em&gt;&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# initializes this vagrant session with the image we downloaded&lt;/span&gt;
vagrant init ubuntu/trusty64

&lt;span class="c1"&gt;# starts the virtual machine&lt;/span&gt;
vagrant up
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Once the box is set up, make sure you have git install to access the MINGGW32 bash terminal in windows. From the &lt;em&gt;git bash&lt;/em&gt; found when you right-click in an empty space in your &lt;em&gt;vagrant_test&lt;/em&gt; folder, type&lt;/p&gt;
&lt;h4&gt;5. Access your brand new Linux machine on Windows!&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# using ssh to access the shell of your machine&lt;/span&gt;
vagrant ssh

&lt;span class="c1"&gt;# and when finished exit ssh&lt;/span&gt;
&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;and that will enter an ssh shell into the vagrant box. Finally, we have a true linux bash command line or shell!! Horray. The hardest part is over, celebrate and get ready to actually hace some fun&lt;/p&gt;
&lt;h4&gt;6. Using File Sync&lt;/h4&gt;
&lt;p&gt;One of the most confusing and challenging parts of Linux is networking. Vagrant does an awesome job of transferring files to and from your vagrant session, ie, The VM syncs easily with the host machine. To test the sync feature, in your current bash shell,&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="k"&gt;called&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;
&lt;span class="n"&gt;mkdir&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;

&lt;span class="o"&gt;#&lt;/span&gt; &lt;span class="k"&gt;create&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;file&lt;/span&gt; &lt;span class="k"&gt;called&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt; &lt;span class="k"&gt;and&lt;/span&gt; &lt;span class="k"&gt;add&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;string&lt;/span&gt; &lt;span class="k"&gt;to&lt;/span&gt; &lt;span class="n"&gt;it&lt;/span&gt;
&lt;span class="n"&gt;echo&lt;/span&gt; &lt;span class="ss"&gt;"testing the files sync in a vagrant VM"&lt;/span&gt; &lt;span class="o"&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;vagrant&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;txt&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;7. Reloading, Stopping, and Starting&lt;/h4&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# To reload a VM and reload any new changes in the Vagrantfile config run&lt;/span&gt;
vagrant reload

&lt;span class="c1"&gt;# When complete and want to exit, run&lt;/span&gt;
vagrant halt

&lt;span class="c1"&gt;# When you are ready to start working again and starting fresh&lt;/span&gt;
vagrant up
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;8. Running scripts and Installing programs&lt;/h4&gt;
&lt;h5&gt;Issues with writing bash scripts in windows&lt;/h5&gt;
&lt;p&gt;As you start editing install scripts and the Vagrantfile, I have found that using windows text editors messes up the character encoding, so use gitbash and vim, like &lt;code&gt;vim install.sh&lt;/code&gt; to launch the in shell editor. If you do edit files in windows, you may need to convert them. I have found dos2unix to work well. To install and convert a shell script in place, use&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;sudo apt-get install dos2unix
dos2unix script.sh
&lt;/code&gt;&lt;/pre&gt;


&lt;h5&gt;Installing python&lt;/h5&gt;
&lt;p&gt;There are many ways to install python, but I really appreciate how well conda works. It has all the packages I want, and they just work. To get conda either install the full package &lt;a href="http://continuum.io/downloads#all"&gt;anaconda&lt;/a&gt; or, I prefer &lt;a href="http://conda.pydata.org/miniconda.html"&gt;miniconda&lt;/a&gt; because my internet is slow. Also, I attempted to create a silent install script but was not successful, so if anyone knows how to perform a silent install of miniconda on a vagrant machine, please let me know!&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;git clone https://github.com/nagordon/vagrant-miniconda.git
&lt;span class="nb"&gt;cd&lt;/span&gt; vagrant-miniconda
vagrant up
vagrant ssh
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;copy and paste these commands line by line into the vagrant shell to manually install miniconda&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="c1"&gt;# downloads miniconda&lt;/span&gt;
wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh

&lt;span class="c1"&gt;# makes the miniconda installation executable&lt;/span&gt;
chmod +x Miniconda-latest-Linux-x86_64.sh

&lt;span class="c1"&gt;# installs miniconda manually. Make sure you select yes for adding the path. Also spacebar to skip the documentation at the beginning&lt;/span&gt;
bash Miniconda-latest-Linux-x86_64.sh

&lt;span class="c1"&gt;# remove the downloaded fil&lt;/span&gt;
rm Miniconda-latest-Linux-x86_64.sh
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;now close the ssh connection and restart to access conda&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="nb"&gt;exit&lt;/span&gt;
vagrant ssh
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Run the install script to get all the packages you want&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;conda install pip -y
conda install numpy -y
conda install ipython -y
conda install matplotlib -y
conda install pandas -y
conda install numpy -y
conda install ipython-notebook -y
&lt;/code&gt;&lt;/pre&gt;


&lt;h4&gt;9. ENJOY&lt;/h4&gt;
&lt;p&gt;Now that we have everything running smoothly, go out an explore all the amazing software out there on Linux and enjoy.&lt;/p&gt;
&lt;h3&gt;Summary&lt;/h3&gt;
&lt;p&gt;In my experience, this is the fastest and easiest way to get from Windows to a real Linux environment. Now, practicing Linux operation from the command line should be easier and fast without having to mess around with the operting system interface. I hope you enjoy your foray into Linux as much as I have. Please let me know if you have any questions, comments, or suggestions. Thanks! Stay Curious!&lt;/p&gt;&lt;/div&gt;</description><category>linux</category><guid>https://nagordon.github.io/ifcuriousthenlearn/posts/vagrant-linux/</guid><pubDate>Tue, 18 Aug 2015 08:00:00 GMT</pubDate></item><item><title>Team Fortress 2 Server Install for Dummies</title><link>https://nagordon.github.io/ifcuriousthenlearn/posts/tf2-server-setup/</link><dc:creator>neal</dc:creator><description>&lt;div&gt;&lt;p&gt;For those of us who remember playing games on dos, steam[http://store.steampowered.com/]
is a nice program for purchasing, managing, and playing video games. I grew up playing LAN games because dial-up just wasn't fast enough for online gaming, and it is way more fun to play games in the same room with your friends rather than random people online.&lt;/p&gt;
&lt;p&gt;Things have changed since those days. Internet speeds and just fine for online gaming, but I still prefer LAN games because, again, it is way more fun to game with your friends in the same room. So, I enjoy hosting LAN games, and I found setting up a local server a fun technical challenge, and If you are interested in doing the same, this should help you do it.&lt;/p&gt;
&lt;p&gt;The cool things with steam servers is you don't even need an account. You can create an anonymous server that is not affiliated with you.&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 1&lt;/strong&gt; - Get a free operating system&lt;/h3&gt;
&lt;p&gt;Get a Debain based Linux computer. I am using an older samsung laptop (6 GB, i5 processor) running &lt;a href="http://www.linuxmint.com/edition.php?id=172"&gt;mint-cinnamon&lt;/a&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 2&lt;/strong&gt; - Install dependent software&lt;/h3&gt;
&lt;p&gt;Get to your linux terminal and install the required software by running this command
&lt;code&gt;sudo apt-get install gdb mailutils postfix lib32gcc1&lt;/code&gt;&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 3&lt;/strong&gt; - Create server user account&lt;/h3&gt;
&lt;p&gt;Create a user for the server admin, assign a password, and login to tf2server account&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;adduser tf2server
passwd tf2server
su tf2server
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;&lt;strong&gt;Step 4&lt;/strong&gt; - Install steam server software&lt;/h3&gt;
&lt;p&gt;There are multiple ways of doing this. One is to follow the &lt;a href="https://wiki.teamfortress.com/wiki/Linux_dedicated_server"&gt;steam installation&lt;/a&gt; or another &lt;a href="http://stevenbenner.com/2010/11/how-to-set-up-a-team-fortress-2-dedicated-server-on-ubuntu/"&gt;tutorial&lt;/a&gt; or &lt;a href="http://danielgibbs.co.uk/lgsm/tf2server/"&gt;another tutorial&lt;/a&gt;, which is what I recommend and used.  &lt;/p&gt;
&lt;p&gt;This will download the script, make it executable, and execute the installation&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;wget http://danielgibbs.co.uk/dl/tf2server
chmod +x tf2server
./tf2server install
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;&lt;strong&gt;Step 5&lt;/strong&gt; - Start the server&lt;/h3&gt;
&lt;p&gt;Go to the tf2server home directory &lt;code&gt;cd ~&lt;/code&gt; which will take you to &lt;code&gt;/home/tf2server/&lt;/code&gt; and use these commands to manage your server  &lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;./tf2server start
./tf2server stop
./tf2server restart
./tf2server details
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;Type &lt;code&gt;./tf2server start&lt;/code&gt; to start the server&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 6&lt;/strong&gt; - Connect via LAN&lt;/h3&gt;
&lt;p&gt;if you run &lt;code&gt;./tf2server details&lt;/code&gt; you will see a bunch of output  &lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="n"&gt;Team&lt;/span&gt; &lt;span class="n"&gt;Fortress&lt;/span&gt; &lt;span class="mi"&gt;2&lt;/span&gt; &lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="n"&gt;Details&lt;/span&gt;
&lt;span class="o"&gt;================================================================================================================================================&lt;/span&gt;
&lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="n"&gt;name&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;    &lt;span class="n"&gt;tf2&lt;/span&gt; &lt;span class="n"&gt;server&lt;/span&gt; &lt;span class="mi"&gt;1&lt;/span&gt;
&lt;span class="n"&gt;Server&lt;/span&gt; &lt;span class="n"&gt;IP&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;      &lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;196&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;27015&lt;/span&gt;
&lt;span class="n"&gt;RCON&lt;/span&gt; &lt;span class="n"&gt;password&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;tf2server&lt;/span&gt;
&lt;span class="n"&gt;Status&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;         &lt;span class="n"&gt;ONLINE&lt;/span&gt;

&lt;span class="n"&gt;Command&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;line&lt;/span&gt; &lt;span class="k"&gt;Parameters&lt;/span&gt;
&lt;span class="o"&gt;================================================================================================================================================&lt;/span&gt;
&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="n"&gt;srcds_run&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;game&lt;/span&gt; &lt;span class="n"&gt;tf&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;strictportbind&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;ip&lt;/span&gt; &lt;span class="mi"&gt;192&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;168&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;1&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="mi"&gt;196&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;port&lt;/span&gt; &lt;span class="mi"&gt;27015&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;clientport&lt;/span&gt; &lt;span class="mi"&gt;27005&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;tv_port&lt;/span&gt; &lt;span class="mi"&gt;27020&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;tickrate&lt;/span&gt;  &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="k"&gt;map&lt;/span&gt; &lt;span class="n"&gt;pl_goldrush&lt;/span&gt; &lt;span class="o"&gt;+&lt;/span&gt;&lt;span class="n"&gt;servercfgfile&lt;/span&gt; &lt;span class="n"&gt;tf2&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;server&lt;/span&gt;&lt;span class="p"&gt;.&lt;/span&gt;&lt;span class="n"&gt;cfg&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;maxplayers&lt;/span&gt; &lt;span class="mi"&gt;16&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;what we want here is the local ip and port &lt;code&gt;Server IP: 192.168.1.196:27015&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Now we can connect locally by launching Team Fortress 2, hit &lt;code&gt;~&lt;/code&gt; to drop down the console and type &lt;code&gt;connect 192.168.1.196:27015&lt;/code&gt; and that should connect you to the server locally&lt;/p&gt;
&lt;h3&gt;&lt;strong&gt;Step 7&lt;/strong&gt; - Set up a Public Server&lt;/h3&gt;
&lt;p&gt;If you want to make this a public server, we need to do a few more things. First, I needed to remove the &lt;code&gt;-strictportbind&lt;/code&gt; portion on the command-line properties in the file located in &lt;code&gt;/tf2server/tf2server&lt;/code&gt; file so that an unused port is chosen, so when you restart the tf2server, it may choose a different port to allow for online access.&lt;/p&gt;
&lt;p&gt;After that, I access my default router IP via a web browser with &lt;code&gt;192.168.1.1&lt;/code&gt; and set up a port forward on the server IP and port&lt;/p&gt;
&lt;p&gt;Now, restart the tf2server with &lt;code&gt;./tf2server restart&lt;/code&gt; and go to the console &lt;code&gt;./tf2server console&lt;/code&gt; and look at some of the output. Note, this script uses tmux, which allows us to log out of the server and keep the server running. Here, you can run all the comamnds to manage the server&lt;/p&gt;
&lt;p&gt;You should see somewhere in the top the public ip address of the server computer&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;Connection to Steam servers successful.&lt;/span&gt;
&lt;span class="err"&gt;   Public IP is 12.34.56.78.&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;and&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;Network: IP &lt;span class="m"&gt;192&lt;/span&gt;.168.1.196, mode MP, dedicated Yes, ports &lt;span class="m"&gt;27015&lt;/span&gt; SV / &lt;span class="m"&gt;27005&lt;/span&gt; CL
&lt;/code&gt;&lt;/pre&gt;


&lt;h3&gt;&lt;strong&gt;Step 8&lt;/strong&gt; - Connect to your public server&lt;/h3&gt;
&lt;p&gt;Now we have all the information we need to create public server, the public IP and the SV port it selected. Finally launch Steam and do&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Severs -&amp;gt; Favorites -&amp;gt; Add a Server -&amp;gt; enter &lt;code&gt;12.34.56.78:27015&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Now you have a public server!&lt;/p&gt;
&lt;p&gt;if you want to play without people, add some bots. Go to your console via &lt;code&gt;./tf2server console&lt;/code&gt; and add some bots&lt;code&gt;tf_bot_add 4&lt;/code&gt; change the level to &lt;code&gt;changelevel pl_goldrush&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;I have found many maps don't work well with bots. The maps I have listed below seemed to work well.&lt;/p&gt;
&lt;h3&gt;Server Customization&lt;/h3&gt;
&lt;p&gt;To customize your server there are a few files you should edit. Make sure you make a backup of each in case it gets messed up&lt;/p&gt;
&lt;p&gt;The configuration file updates the server every time a new map loads. Here is mine.
/home/tf2server/serverfiles/tf/cfg/tf2-server.cfg&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;mp_disable_respawn_times 0&lt;/span&gt;
&lt;span class="err"&gt;tf_bot_quota 13&lt;/span&gt;
&lt;span class="err"&gt;tf_bot_quota_mode "fill"&lt;/span&gt;
&lt;span class="err"&gt;tf_bot_difficulty 1&lt;/span&gt;
&lt;span class="err"&gt;mp_timelimit 15&lt;/span&gt;
&lt;span class="err"&gt;mp_maxrounds 5&lt;/span&gt;
&lt;span class="err"&gt;mp_winlimit&lt;/span&gt;
&lt;span class="err"&gt;sv_cheats 0&lt;/span&gt;
&lt;span class="err"&gt;tf_bot_melee_only 0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;/home/tf2server/serverfiles/tf/cfg/mapcycle_default.txt
The mapcycle file tells the server which map to go to next. if you use &lt;code&gt;changelevel pl_barnblitz&lt;/code&gt;, it will begin the cycle there&lt;/p&gt;
&lt;pre class="code literal-block"&gt;&lt;span&gt;&lt;/span&gt;&lt;code&gt;&lt;span class="err"&gt;pl_badwater&lt;/span&gt;
&lt;span class="err"&gt;pl_goldrush&lt;/span&gt;
&lt;span class="err"&gt;pl_upward&lt;/span&gt;
&lt;span class="err"&gt;pl_barnblitz&lt;/span&gt;
&lt;span class="err"&gt;pl_hoodoo_final&lt;/span&gt;
&lt;span class="err"&gt;koth_viaduct&lt;/span&gt;
&lt;span class="err"&gt;koth_nucleus&lt;/span&gt;
&lt;span class="err"&gt;koth_harvest_final&lt;/span&gt;
&lt;span class="err"&gt;koth_lakeside_final&lt;/span&gt;
&lt;span class="err"&gt;koth_badlands&lt;/span&gt;
&lt;span class="err"&gt;koth_king&lt;/span&gt;
&lt;span class="err"&gt;plr_pipeline&lt;/span&gt;
&lt;span class="err"&gt;plr_hightower&lt;/span&gt;
&lt;span class="err"&gt;pl_thundermountain&lt;/span&gt;
&lt;span class="err"&gt;pl_frontier_final&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;


&lt;p&gt;If you want to use your xbox controller, from the client computer access the console via &lt;code&gt;~&lt;/code&gt; and run &lt;code&gt;exec 260controller&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Enjoy!&lt;/p&gt;
&lt;p&gt;Here are some links that I found helpful &lt;br&gt;
https://wiki.teamfortress.com/wiki/Linux_dedicated_server&lt;br&gt;
http://danielgibbs.co.uk/lgsm/tf2server/&lt;br&gt;
http://stevenbenner.com/2010/11/how-to-set-up-a-team-fortress-2-dedicated-server-on-ubuntu/&lt;br&gt;
https://developer.valvesoftware.com/wiki/List_of_TF2_console_commands_and_variables&lt;br&gt;
https://developer.valvesoftware.com/wiki/Console_Command_List&lt;br&gt;
http://steamcommunity.com/sharedfiles/filedetails/?id=250332112&lt;br&gt;
https://wiki.teamfortress.com/wiki/Linux_dedicated_server&lt;br&gt;
https://wiki.teamfortress.com/wiki/Bots  &lt;/p&gt;&lt;/div&gt;</description><category>gaming</category><category>linux</category><guid>https://nagordon.github.io/ifcuriousthenlearn/posts/tf2-server-setup/</guid><pubDate>Sat, 14 Mar 2015 08:00:00 GMT</pubDate></item></channel></rss>